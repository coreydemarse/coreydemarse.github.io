import{_ as e,o as a,c as t,h as n}from"./app.8e3fde29.js";const f='{"title":"how to bun","description":"","frontmatter":{"title":"how to bun","date":"2023-12-08T00:00:00.000Z","author":"Corey DeMarse","gravatar":"74e3ab7e361c4141736de00ad444f90a","twitter":"@coreydemarse"},"headers":[],"relativePath":"guides/how-to-bun.md","lastUpdated":null}',o={name:"guides/how-to-bun.md"},s=n(`<p>an example of how to use Bun, a javascript all-in-one runtime</p><hr><p><a href="/guides.html">&lt;- return to guides and tutorials</a></p><p><code>This content has been generated partially by Artificial Intelligence</code></p><img src="https://skillicons.dev/icons?i=bun,ts"><br><h1 id="what-is-bun" tabindex="-1">What is Bun <a class="header-anchor" href="#what-is-bun" aria-hidden="true">#</a></h1><p>Bun is a new JavaScript/TypeScript runtime built from scratch to serve the modern JavaScript ecosystem. It has three major design goals:</p><ul><li>Speed. Bun starts fast and runs fast. It extends JavaScriptCore, the performance-minded JS engine built for Safari. Fast start times mean fast apps and fast APIs.</li><li>Elegant APIs. Bun provides a minimal set of highly-optimized APIs for performing common tasks, like starting an HTTP server and writing files.</li><li>Cohesive DX. Bun is a complete toolkit for building JavaScript apps, including a package manager, test runner, and bundler.</li></ul><p>Bun is designed as a drop-in replacement for Node.js. It natively implements hundreds of Node.js and Web APIs, including fs, path, Buffer and more.</p><p>The goal of Bun is to run most of the world&#39;s server-side JavaScript and provide tools to improve performance, reduce complexity, and multiply developer productivity.</p><h1 id="how-to-bun" tabindex="-1">How to Bun <a class="header-anchor" href="#how-to-bun" aria-hidden="true">#</a></h1><p>First, you need to have Bun installed on your computer. You can download it from the official website <a href="https://bun.sh" target="_blank" rel="noopener noreferrer">https://bun.sh</a></p><p>Once you have Bun installed, create a new directory and inside it create a new file named &quot;app.ts&quot;. Open this file in your code editor.</p><p>In the &quot;app.ts&quot; file, add the following code:</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// This is a simple JavaScript code to print &quot;Hello, World!&quot; in the console</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>Save the file and navigate to the directory in your terminal/command prompt.</p><p>Type in the following command to run the app:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">bun run app.ts</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>You will see the output &quot;Hello, World!&quot; in your terminal.</p><p>Congratulations, you have just created your first Bun app!</p><p>Note: <code>console.log()</code> is a built-in function in Bun that allows you to print messages to the console.</p><p><br><br><a href="/guides.html">&lt;- return to guides and tutorials</a></p>`,23),r=[s];function i(l,p,d,c,u,h){return a(),t("div",null,r)}var g=e(o,[["render",i]]);export{f as __pageData,g as default};
